app: oldreddit
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: oldReddit
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details

provider:
  name: aws
  runtime: nodejs20.x
  profile: default
  # you can overwrite defaults here
  #  stage: dev
  region: us-west-1
  environment:
    NODE_ENV: 'development'

  # you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:ListStreams
        - dynamodb:DescribeStream
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:*:table/Users
        - arn:aws:dynamodb:${self:provider.region}:*:table/SubReddits
        - arn:aws:dynamodb:${self:provider.region}:*:table/Posts
        - arn:aws:dynamodb:${self:provider.region}:*:table/Comments
        - arn:aws:dynamodb:${self:provider.region}:*:table/Comments/stream/*
        - arn:aws:dynamodb:${self:provider.region}:*:table/Votes
        - arn:aws:dynamodb:${self:provider.region}:*:table/Votes/stream/*

functions:
  signup:
    handler: routes/api/auth/signup.handler
    events:
      - http:
          path: api/users/signup
          method: post
  login:
    handler: routes/api/auth/login.handler
    events:
      - http:
          path: api/users/login
          method: post
  current:
    handler: routes/api/auth/current.handler
    events:
      - http:
          path: api/users/current
          method: get
  createSubReddit:
    handler: routes/api/subs/create.handler
    events:
      - http:
          path: api/subReddits
          method: post
  getAllSubReddits:
    handler: routes/api/subs/readAll.handler
    events:
      - http:
          path: api/subReddits
          method: get
  vote:
    handler: routes/api/vote.handler
    events:
      - http:
          path: api/votes
          method: post
  getAllPosts:
    handler: routes/api/posts/readAll.handler
    events:
      - http:
          path: api/posts
          method: get
  getOnePost:
    handler: routes/api/posts/readOne.handler
    events:
      - http:
          path: api/posts/{id}
          method: get
  createPost:
    handler: routes/api/posts/create.handler
    events:
      - http:
          path: api/posts
          method: post
  createComment:
    handler: routes/api/comments/create.handler
    events:
      - http:
          path: api/comments
          method: post
  getAllComments:
    handler: routes/api/comments/readAll.handler
    events:
      - http:
          path: api/comments
          method: get
  getReplies:
    handler: routes/api/comments/readReplies.handler
    events:
      - http:
          path: api/comments/{commentId}/replies
          method: get
  updateNetUpvotes:
    handler: taskrunners/updateNetUpvotes.handler
    events:
      - stream:
          enabled: true
          type: dynamodb
          arn: arn:aws:dynamodb:us-west-1:034362062339:table/Votes/stream/2024-11-09T21:19:31.071
          batchSize: 1
          startingPosition: LATEST
  updateReplyCount:
    handler: taskrunners/updateReplyCount.handler
    events:
      - stream:
          enabled: true
          type: dynamodb
          arn: arn:aws:dynamodb:us-west-1:034362062339:table/Comments/stream/2024-11-11T05:08:56.344
          batchSize: 1
          startingPosition: LATEST

plugins:
  - serverless-dynamodb
  - serverless-offline-dynamodb-streams
  - serverless-offline

custom:
  serverless-dynamodb:
    stages:
      - dev
    start:
      docker: true
      image: amazon/dynamodb-local
      port: 8000
      shareDb: true
      inMemory: true # Set to false if you want persistent storage
      heapInitial: 200m
      heapMax: 1g
      migrate: true # Automatically create tables on start         s
  serverless-offline:
    port: 5000
    noPrependStageInUrl: true
# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
